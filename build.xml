<?xml version="1.0"?>
<project name="medcafe" default="compile" basedir=".">

    <target name="setProps" depends="init" description="Sets the various properties - custom ones should be in build.props.">
        <property file="build.props" />
        <dirname property="antfile.dir" file="${ant.file}"/>
        <property name="src" value="src" description="location of source code" />
        <property name="build" value="build" description="location to build the files to " />
        <property name="jars" value="lib" description="location of necessary jar files" />
        <property name="doc" value="doc" description="location of javadocs" />
        <property name="warfile" value="${ant.project.name}.war" description="name of war file to build" />
        <property name="jarfile" value="${ant.project.name}.jar" description="name of jar file to build" />
        <property name="config" value="config" description="location of WEB-INF " />
        <property name="html" value="html" description="location of other HTML pages"/>
    	<property name="perl" value="perl" description="location of Perl code"/>
        <property name="webxml" value="${config}/web.xml" description="name of file to use as web.xml" />
        <property name="build.compiler" value="modern" />
        <property name="appBase" value="tomcat/webapps" />
        <property name="webApp" value="${ant.project.name}" description="name of webapp to deploy as" />
        <property name="testProps" value="${antfile.dir}/test.properties" />
        <property name="release" value="v0_00" />
        <!-- <echoproperties /> -->

        <path id="jarspath">
            <fileset dir="${jars}">
                <include name="**/*.jar" />
            </fileset>
        </path>
        <!-- Uncomment this to print the classpath  -->
        <!--
            <property name="myclasspath" refid="jarspath"/>
            <echo message="Classpath = ${myclasspath}"/>
        -->
    </target>

    <target name="jar" depends="compile"  description="Builds the jar file(s) for the application.">
        <jar jarfile="${jarfile}" basedir="${build}">
            <include name="*/**" />
            <exclude name="**/test/**" />
        	<manifest>
                <attribute name="Main-Class" value="firstSteps.medcafeMain" />
                <attribute name="Class-Path" value="${jarspath}" />
            </manifest>
        </jar>

    </target>

    <target name="release" depends="clean, zipSource, jar, zipJavadoc, clean" description="Creates release documents (archives of source code, binaries, javadoc, etc.).  All are build from scratch.">
        <move file="${jarfile}" overwrite="true" tofile="${ant.project.name}_jar_${release}.jar" />
        <!-- <move file="${warfile}" overwrite="true" tofile="${ant.project.name}${release}.war" /> -->
    </target>

    <target name="zipSource" depends="setProps, clean">
        <zip basedir="${antfile.dir}" compress="true" defaultexcludes="true" zipfile="${ant.project.name}_src_${release}.zip">
            <exclude name="tomcat"/>
        </zip>
    </target>

    <target name="zipJavadoc" depends="doc">
        <zip basedir="${doc}" compress="true" defaultexcludes="true" zipfile="${ant.project.name}_api_${release}.zip"></zip>
    </target>

    <target name="init">
        <tstamp />
        <echo message="Build file: ${DSTAMP}, ${TSTAMP}" />
        <available property="junit.present" classname="junit.framework.Test"/>
    </target>

    <target name="compile" depends="setProps" description="Compiles all changed or new source code.  Won't recompile stuff that hasn't changed.">
        <mkdir dir="${build}" />
        <javac srcdir="${src}" destdir="${build}" deprecation="on" debug="on" source="1.5" target="1.5" >
            <classpath>
                <path refid="jarspath" />
            </classpath>
            <include name="**/*.java" />
        </javac>
    </target>

    <target name="clean" depends="setProps" description="Deletes javadocs, the build directory, and any derived archive files (jars, wars, etc.)">
        <delete dir="${doc}" />
        <delete dir="${build}" />
        <delete>
            <fileset dir="." includes="${ant.project.name}*.zip" />
        </delete>
        <delete>
            <fileset dir="." includes="${ant.project.name}*.war" />
        </delete>
        <delete>
            <fileset dir="." includes="${ant.project.name}*.jar" />
        </delete>
        <delete>
            <fileset dir="." includes="*.aar" />
        </delete>
    </target>

    <target name="doc" depends="setProps">
        <mkdir dir="${doc}" />
        <javadoc packagenames="org.mitre.*" sourcepath="${src}" destdir="${doc}" author="true" version="true" windowtitle="MedCafe API">
            <classpath>
                <path refid="jarspath" />
            </classpath>
        </javadoc>
    </target>
    <target name="war" depends="jar" description="Builds the war file for the application.  Will do compilation and build jar files first, if necessary.">
        <!-- create a release file -->
        <echo file="html/release.txt" message="Release: ${release} " />
        <echo file="html/release.txt" append="true" message="Build date, time: ${DSTAMP}, ${TSTAMP}" />
        <war warfile="${warfile}" webxml="${webxml}">
            <fileset dir="${html}" />
            <lib dir="${jars}">
                <!-- provided by Tomcat -->
                <exclude name="servlet-api.jar" />
                <exclude name="javax.servlet.jar" />
                <exclude name="jsp-api.jar" />
                <exclude name="commons-logging*" />
                <!-- flatten out the lib directory - they are added below -->
                <exclude name="**/restlet/**"/>
                <exclude name="**/vista/**"/>
                <exclude name="**/jboss/**"/>
                <exclude name="**/velocity2js/**"/>
            </lib>
            <lib file="${jarfile}"/>
            <lib dir="${jars}/restlet" />
            <lib dir="${jars}/vista" />
            <lib dir="${jars}/jboss" />
            <lib dir="${jars}/velocity2js" />
            <webinf dir="${config}">
                <exclude name="context.xml"/>
                <exclude name="web.xml"/>
            </webinf>
            <webinf dir=".">
                <include name="templates/*.vm"/>
            </webinf>
            <metainf dir="${config}">
                <include name="context.xml"/>
            </metainf>
            <classes file="logging.properties"/>
        </war>
    </target>
    <!-- Runs the unit tests -->
    <target name="test" depends="compile" description="Runs unit tests.  Will compile source code as necessary.">
        <junit haltonfailure="yes">
            <formatter type="plain" usefile="false" />
            <classpath>
                <pathelement path="${build}" />
                <path refid="jarspath" />
            </classpath>
            <!-- Pass in the location of the ant file.  Useful for relative paths. -->
            <sysproperty key="antfile.dir" value="${antfile.dir}"/>
            <sysproperty key="java.util.logging.config.file" file="logging.test.properties" />
            <batchtest fork="yes" todir="${build}">
                <fileset dir="${src}">
                    <include name="test/**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <taskdef name="vel2js" classname="at.riemers.velocity2js.velocity.Velocity2JsTask" classpath="lib/velocity2js/Velocity2Js.jar;lib/velocity2js/velocity-1.5.jar;lib/velocity2js/commons-collections-3.1.jar;lib/velocity2js/commons-lang-2.1.jar; lib/velocity2js/commons-logging.jar; lib/velocity2js/commons-logging.jar; lib/velocity2js/velocity-1.5/log4j-1.2.12.jar;"/>

    <target name="vel2js" depends="" description="Regenerates all templates">
        <vel2js templateDir="templates" javascriptDir="html/js">
                   <!-- [javascriptName="<javascript-file>"] -->
                   <!-- [resource="<resource-file>"] > -->
                <fileset dir="templates" casesensitive="yes">
                    <include name="**/*.vm"/>
                </fileset>
        </vel2js>
    </target>
</project>