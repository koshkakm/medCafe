KIDS Distribution saved on Feb 01, 2010@12:24:04
BUMP VERSION NUMBER TO REFLECT CHANGES SINCE MAY 2009
**KIDS**:MSC RES*1.0*2^

**INSTALL NAME**
MSC RES*1.0*2
"BLD",7061,0)
MSC RES*1.0*2^^0^3100201^y
"BLD",7061,4,0)
^9.64PA^^
"BLD",7061,6.3)
1
"BLD",7061,"KRN",0)
^9.67PA^8989.52^19
"BLD",7061,"KRN",.4,0)
.4
"BLD",7061,"KRN",.401,0)
.401
"BLD",7061,"KRN",.402,0)
.402
"BLD",7061,"KRN",.403,0)
.403
"BLD",7061,"KRN",.5,0)
.5
"BLD",7061,"KRN",.84,0)
.84
"BLD",7061,"KRN",3.6,0)
3.6
"BLD",7061,"KRN",3.8,0)
3.8
"BLD",7061,"KRN",9.2,0)
9.2
"BLD",7061,"KRN",9.8,0)
9.8
"BLD",7061,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7061,"KRN",9.8,"NM",1,0)
MSCRES^^0^B26296407
"BLD",7061,"KRN",9.8,"NM","B","MSCRES",1)

"BLD",7061,"KRN",19,0)
19
"BLD",7061,"KRN",19.1,0)
19.1
"BLD",7061,"KRN",101,0)
101
"BLD",7061,"KRN",409.61,0)
409.61
"BLD",7061,"KRN",771,0)
771
"BLD",7061,"KRN",870,0)
870
"BLD",7061,"KRN",8989.51,0)
8989.51
"BLD",7061,"KRN",8989.52,0)
8989.52
"BLD",7061,"KRN",8994,0)
8994
"BLD",7061,"KRN","B",.4,.4)

"BLD",7061,"KRN","B",.401,.401)

"BLD",7061,"KRN","B",.402,.402)

"BLD",7061,"KRN","B",.403,.403)

"BLD",7061,"KRN","B",.5,.5)

"BLD",7061,"KRN","B",.84,.84)

"BLD",7061,"KRN","B",3.6,3.6)

"BLD",7061,"KRN","B",3.8,3.8)

"BLD",7061,"KRN","B",9.2,9.2)

"BLD",7061,"KRN","B",9.8,9.8)

"BLD",7061,"KRN","B",19,19)

"BLD",7061,"KRN","B",19.1,19.1)

"BLD",7061,"KRN","B",101,101)

"BLD",7061,"KRN","B",409.61,409.61)

"BLD",7061,"KRN","B",771,771)

"BLD",7061,"KRN","B",870,870)

"BLD",7061,"KRN","B",8989.51,8989.51)

"BLD",7061,"KRN","B",8989.52,8989.52)

"BLD",7061,"KRN","B",8994,8994)

"BLD",7061,"MSC")
/home/japple/MSCRES.1.1.KID
"BLD",7061,"MSCOM")
BUMP VERSION NUMBER TO REFLECT CHANGES SINCE MAY 2009
"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","MSCRES")
0^1^B26296407
"RTN","MSCRES",1,0)
MSCRES ; MSC/JDA - Resource message format ; May 14, 2009
"RTN","MSCRES",2,0)
 ;;1.0;MSC RES;;May 14, 2009
"RTN","MSCRES",3,0)
 Q
"RTN","MSCRES",4,0)
FROMBYTE(RETVAL,BYTES) 
"RTN","MSCRES",5,0)
 M RETVAL=BYTES
"RTN","MSCRES",6,0)
 Q
"RTN","MSCRES",7,0)
TOBYTE(RETVAL,RES) 
"RTN","MSCRES",8,0)
 M RETVAL=RES
"RTN","MSCRES",9,0)
 K RETVAL("INDEX")
"RTN","MSCRES",10,0)
 K RETVAL("OFFSET")
"RTN","MSCRES",11,0)
 K RETVAL("PROP")
"RTN","MSCRES",12,0)
 K RETVAL("VAL")
"RTN","MSCRES",13,0)
 Q
"RTN","MSCRES",14,0)
START(RES) ; for write
"RTN","MSCRES",15,0)
 S RES("INDEX")=1,RES("OFFSET")=1
"RTN","MSCRES",16,0)
 S RES(1)=""
"RTN","MSCRES",17,0)
 Q
"RTN","MSCRES",18,0)
FIRST(RES) ; for read
"RTN","MSCRES",19,0)
 S RES("INDEX")=1,RES("OFFSET")=1,RES("PROP")="",RES("VAL")=""
"RTN","MSCRES",20,0)
 Q
"RTN","MSCRES",21,0)
GETBYTES(RES,NUM) 
"RTN","MSCRES",22,0)
 N RETVAL
"RTN","MSCRES",23,0)
 N NXTLNAMT S NXTLNAMT=0 ; Number of bytes to get from the next line
"RTN","MSCRES",24,0)
 ; CHUNK_SIZE is 201
"RTN","MSCRES",25,0)
 N OFFSET S OFFSET=RES("OFFSET")
"RTN","MSCRES",26,0)
 N INDEX S INDEX=RES("INDEX")
"RTN","MSCRES",27,0)
 I NUM+OFFSET-1>201 S NXTLNAMT=NUM+OFFSET-201-1 S NUM=201-OFFSET+1
"RTN","MSCRES",28,0)
 S RETVAL=$E(RES(INDEX),OFFSET,OFFSET+NUM-1)
"RTN","MSCRES",29,0)
 S RES("OFFSET")=OFFSET+NUM
"RTN","MSCRES",30,0)
 I RES("OFFSET")=(201+1) S RES("OFFSET")=1 S RES("INDEX")=INDEX+1
"RTN","MSCRES",31,0)
 S:NXTLNAMT>0 RETVAL=RETVAL_$$GETBYTES(.RES,NXTLNAMT)
"RTN","MSCRES",32,0)
 Q RETVAL
"RTN","MSCRES",33,0)
PUTBYTES(RES,BYTES) 
"RTN","MSCRES",34,0)
 N LEN S LEN=$L(BYTES)
"RTN","MSCRES",35,0)
 N NUM S NUM=LEN
"RTN","MSCRES",36,0)
 ; CHUNK_SIZE is 201
"RTN","MSCRES",37,0)
 N OFFSET S OFFSET=RES("OFFSET")
"RTN","MSCRES",38,0)
 N INDEX S INDEX=RES("INDEX")
"RTN","MSCRES",39,0)
 I NUM+OFFSET-1>201 S NUM=201-OFFSET+1 S RES(INDEX)=RES(INDEX)_$E(BYTES,1,NUM)
"RTN","MSCRES",40,0)
 E  S RES(INDEX)=RES(INDEX)_BYTES
"RTN","MSCRES",41,0)
 S RES("OFFSET")=OFFSET+NUM
"RTN","MSCRES",42,0)
 I RES("OFFSET")=(201+1) S RES("OFFSET")=1 S RES("INDEX")=INDEX+1 S RES(INDEX+1)=""
"RTN","MSCRES",43,0)
 D:NUM'=LEN PUTBYTES(.RES,$E(BYTES,NUM+1,LEN))
"RTN","MSCRES",44,0)
 Q
"RTN","MSCRES",45,0)
B64TOINT(BUFFER) 
"RTN","MSCRES",46,0)
 N IDX,RESULT
"RTN","MSCRES",47,0)
 N CHAR64 S CHAR64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
"RTN","MSCRES",48,0)
 S RESULT=0
"RTN","MSCRES",49,0)
 F IDX=1:1:$L(BUFFER) D
"RTN","MSCRES",50,0)
 . S RESULT=(RESULT*64)+$F(CHAR64,$E(BUFFER,IDX))-2 ; arrays are 1-base, and find return one past, so +2
"RTN","MSCRES",51,0)
 . Q
"RTN","MSCRES",52,0)
 Q RESULT
"RTN","MSCRES",53,0)
DECODINT(RES,NUMBYTES) 
"RTN","MSCRES",54,0)
 N BUFFER
"RTN","MSCRES",55,0)
 S BUFFER=$RE($$GETBYTES(.RES,NUMBYTES))
"RTN","MSCRES",56,0)
 Q $$B64TOINT(BUFFER)
"RTN","MSCRES",57,0)
ENCODINT(SIZE,NUMBYTES) 
"RTN","MSCRES",58,0)
 N ENCODED,IDX S ENCODED=""
"RTN","MSCRES",59,0)
 N CHAR64 S CHAR64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
"RTN","MSCRES",60,0)
 F IDX=1:1:NUMBYTES D
"RTN","MSCRES",61,0)
 . S ENCODED=ENCODED_$E(CHAR64,(SIZE#64)+1)
"RTN","MSCRES",62,0)
 . S SIZE=SIZE\64
"RTN","MSCRES",63,0)
 . Q
"RTN","MSCRES",64,0)
 Q ENCODED
"RTN","MSCRES",65,0)
NEXTPROP(RES) 
"RTN","MSCRES",66,0)
 N SIZE S SIZE=$$DECODINT(.RES,1)
"RTN","MSCRES",67,0)
 I SIZE=0 S RES("PROP")="",RES("VAL")="" Q 0
"RTN","MSCRES",68,0)
 S RES("PROP")=$$GETBYTES(.RES,SIZE)
"RTN","MSCRES",69,0)
 S SIZE=$$DECODINT(.RES,2)
"RTN","MSCRES",70,0)
 S RES("VAL")=$S(SIZE=0:"",1:$$GETBYTES(.RES,SIZE))
"RTN","MSCRES",71,0)
 Q 1
"RTN","MSCRES",72,0)
GETPROP(RES) 
"RTN","MSCRES",73,0)
 Q RES("PROP")
"RTN","MSCRES",74,0)
GETVAL(RES) 
"RTN","MSCRES",75,0)
 Q RES("VAL")
"RTN","MSCRES",76,0)
ENCODSTR(STR,NUMBYTES) 
"RTN","MSCRES",77,0)
 Q $$ENCODINT($L(STR),NUMBYTES)_STR
"RTN","MSCRES",78,0)
ADDCMPD(RES,NAME) 
"RTN","MSCRES",79,0)
 D PUTBYTES(.RES,$$ENCODSTR(NAME,1)_$$ENCODINT(0,2))
"RTN","MSCRES",80,0)
 Q
"RTN","MSCRES",81,0)
ENDCMPD(RES) 
"RTN","MSCRES",82,0)
 D PUTBYTES(.RES,$$ENCODINT(0,1))
"RTN","MSCRES",83,0)
 Q
"RTN","MSCRES",84,0)
ADDPROP(RES,NAME,VAL) 
"RTN","MSCRES",85,0)
 Q:VAL="" ; Empty values would be confused with compounds
"RTN","MSCRES",86,0)
 D PUTBYTES(.RES,$$ENCODSTR(NAME,1)_$$ENCODSTR(VAL,2))
"RTN","MSCRES",87,0)
 Q
"RTN","MSCRES",88,0)
READBUF(LEN) 
"RTN","MSCRES",89,0)
 N RETVAL,REMAIN,TMP
"RTN","MSCRES",90,0)
 S REMAIN=LEN
"RTN","MSCRES",91,0)
 S RETVAL=""
"RTN","MSCRES",92,0)
 F  Q:REMAIN=0  D
"RTN","MSCRES",93,0)
 . R TMP#REMAIN
"RTN","MSCRES",94,0)
 . S RETVAL=RETVAL_TMP
"RTN","MSCRES",95,0)
 . S REMAIN=LEN-$L(RETVAL)
"RTN","MSCRES",96,0)
 Q RETVAL
"RTN","MSCRES",97,0)
SAVEIO 
"RTN","MSCRES",98,0)
 I '($D(IO)#2) D
"RTN","MSCRES",99,0)
 . N VAR
"RTN","MSCRES",100,0)
 . F VAR="IO","IO(0)","IOBS","IOF","IOM","ION","IOS","IOSL","IOST","IOST(0)","IOT","IOXY" K @VAR
"RTN","MSCRES",101,0)
 . D HOME^%ZIS
"RTN","MSCRES",102,0)
 D SAVDEV^%ZISUTL("oldio")
"RTN","MSCRES",103,0)
 Q
"RTN","MSCRES",104,0)
LOADIO 
"RTN","MSCRES",105,0)
 D USE^%ZISUTL("oldio")
"RTN","MSCRES",106,0)
 D RMDEV^%ZISUTL("oldio")
"RTN","MSCRES",107,0)
 Q
"RTN","MSCRES",108,0)
USE(SOCK) 
"RTN","MSCRES",109,0)
 D USE^%ZISUTL(SOCK("S"))
"RTN","MSCRES",110,0)
 Q
"RTN","MSCRES",111,0)
GETSOCK(SOCK,IPADDR,PORT,TO) 
"RTN","MSCRES",112,0)
 N SOCKNUM
"RTN","MSCRES",113,0)
 S SOCKNUM=$O(^TMP("MSCRES",$J,""),-1)
"RTN","MSCRES",114,0)
 S:SOCKNUM="" SOCKNUM=0
"RTN","MSCRES",115,0)
 S SOCKNUM=SOCKNUM+1
"RTN","MSCRES",116,0)
 S ^TMP("MSCRES",$J,SOCKNUM)=""
"RTN","MSCRES",117,0)
 D SAVEIO
"RTN","MSCRES",118,0)
 D CALL^%ZISTCP(IPADDR,PORT,TO)
"RTN","MSCRES",119,0)
 S SOCK("S")="sock:"_$J_":"_SOCKNUM
"RTN","MSCRES",120,0)
 S SOCK("#")=SOCKNUM
"RTN","MSCRES",121,0)
 D SAVDEV^%ZISUTL(SOCK("S"))
"RTN","MSCRES",122,0)
 D LOADIO
"RTN","MSCRES",123,0)
 Q
"RTN","MSCRES",124,0)
CLSSOCK(SOCK) 
"RTN","MSCRES",125,0)
 D SAVEIO
"RTN","MSCRES",126,0)
 D USE(.SOCK)
"RTN","MSCRES",127,0)
 D CLOSE^%ZISTCP
"RTN","MSCRES",128,0)
 D RMDEV^%ZISUTL(SOCK("S"))
"RTN","MSCRES",129,0)
 K ^TMP("MSCRES",$J,SOCK("#"))
"RTN","MSCRES",130,0)
 D LOADIO
"RTN","MSCRES",131,0)
 Q
"RTN","MSCRES",132,0)
FROMSOCK(RETVAL,SOCK) 
"RTN","MSCRES",133,0)
 N REMAIN,BUFFER,LEN
"RTN","MSCRES",134,0)
 D SAVEIO
"RTN","MSCRES",135,0)
 D USE(.SOCK)
"RTN","MSCRES",136,0)
 D START^MSCRES(.RETVAL)
"RTN","MSCRES",137,0)
 S REMAIN=$$B64TOINT($RE($$READBUF(4)))
"RTN","MSCRES",138,0)
 F  D  Q:'REMAIN
"RTN","MSCRES",139,0)
 . R BUFFER#REMAIN
"RTN","MSCRES",140,0)
 . S LEN=$L(BUFFER)
"RTN","MSCRES",141,0)
 . I LEN D PUTBYTES(.RETVAL,BUFFER) S BUFFER="" S REMAIN=REMAIN-LEN
"RTN","MSCRES",142,0)
 D FIRST(.RETVAL)
"RTN","MSCRES",143,0)
 D LOADIO
"RTN","MSCRES",144,0)
 Q
"RTN","MSCRES",145,0)
TOSOCK(RES,SOCK) 
"RTN","MSCRES",146,0)
 D SAVEIO
"RTN","MSCRES",147,0)
 D USE(.SOCK)
"RTN","MSCRES",148,0)
 N BYTES,BUFLEN,X,COUNT
"RTN","MSCRES",149,0)
 D TOBYTE(.BYTES,.RES)
"RTN","MSCRES",150,0)
 S COUNT=0 S X=""
"RTN","MSCRES",151,0)
 F  S X=$O(BYTES(X)) Q:X=""  S COUNT=COUNT+$L(BYTES(X))
"RTN","MSCRES",152,0)
 W $RE($$ENCODINT(COUNT,4))
"RTN","MSCRES",153,0)
 F  S X=$O(BYTES(X)) Q:X=""  W BYTES(X)
"RTN","MSCRES",154,0)
 W !
"RTN","MSCRES",155,0)
 D LOADIO
"RTN","MSCRES",156,0)
 Q
"RTN","MSCRES",157,0)
SKIPPROP(RES) 
"RTN","MSCRES",158,0)
 Q:$$GETVAL(.RES)'=""
"RTN","MSCRES",159,0)
 F  Q:'$$NEXTPROP^MSCRES(.RES)  D
"RTN","MSCRES",160,0)
 . D:$$GETVAL(.RES)="" SKIPPROP(.RES)
"RTN","MSCRES",161,0)
 . Q
"RTN","MSCRES",162,0)
 Q
"RTN","MSCRES",163,0)
DUMP(RES,IND) 
"RTN","MSCRES",164,0)
 F  Q:'$$NEXTPROP^MSCRES(.RES)  D
"RTN","MSCRES",165,0)
 . S PROPNAME=$$GETPROP^MSCRES(.RES)
"RTN","MSCRES",166,0)
 . W IND
"RTN","MSCRES",167,0)
 . W PROPNAME
"RTN","MSCRES",168,0)
 . I $$GETVAL^MSCRES(.RES)="" W " {",! D DUMP(.RES,IND_"  ") W IND_"}",! Q
"RTN","MSCRES",169,0)
 . W "("_$$GETVAL^MSCRES(.RES)_")",!
"RTN","MSCRES",170,0)
 . Q
"RTN","MSCRES",171,0)
 Q
"VER")
8.0^22.0
**END**
**END**
